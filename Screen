import pygame                           # Allows for a window to show up
from pygame.locals import *             # Allows me to resize the pygame window and the contents inside the window
from requests_html import HTMLSession   # Allows to scrape data off internet
pygame.init()                           # Initialises the window


import time
import sys
import cv2


WIDTH = 800
HEIGHT = 500
screen = pygame.display.set_mode((WIDTH, HEIGHT), HWSURFACE|DOUBLEBUF|RESIZABLE)   # Creates the pygame window and allows it to be resizable

# #WEATHER FOR CITIES
# citiestimecountry = []                                                                                                 # Creates a new arra
# f = open("D:\OneDrive\Documents\SCHOOL\Computing Coursework\Screen\pyvidplayer-main\city.txt","r", encoding="utf8")
# lines = f.readlines()
# for line in lines:
#     lines = line.strip("\n")
#     citiestimecountry.append(lines)
# f.close()
# #WEATHER FOR CITIES



# HTML
query = 'london'                                                                                                                                               # Defines 'query'
s = HTMLSession()                                                                                                                                             # Defines 'htmlsession' as 's'
url = f'https://www.google.com/search?q=weather+{query}'                                                                                                      # URL that data gets scraped from
r = s.get(url,headers={'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36'})   # My user agent
weathernumb = r.html.find('span#wob_tm', first = True).text                                                # Finds and scrapes data with class 'spanj#wob_dc' --> Degrees
weathercondition = r.html.find('span#wob_dc', first = True).text                                           # Finds and scrapes data with class 'spanj#wob_dc' --> Weather condition
# HTML

class Button():
    def __init__(self, image, xpos, ypos, text_input):
        self.image = image
        self.xpos = xpos
        self.ypos = ypos
        self.rect = self.image.get_rect(center=(self.xpos, self.ypos))
        self.text_input = text_input
        self.text = font1.render(self.text_input, True, "white")
        self.text_rect = self.text.get_rect(center=(self.xpos, self.ypos))
    
    def update(self):
        screen.blit(self.image, self.rect)
        screen.blit(self.text, self.text_rect)
        
    def checkForInput(self, position):
        if position[0] in range(self.rect.left, self.rect.right) and position[1] in range(self.rect.top, self.rect.bottom):
            main = False

    def changeColour(self, position):
        if position[0] in range(self.rect.left, self.rect.right) and position[1] in range(self.rect.top, self.rect.bottom):
            self.text = font1.render(self.text_input, True, "green")
        else:
            self.text = font1.render(self.text_input, True, "white")

## DEFINITIONS
# TEXT
white = ((255,255,255))                                                                                                # Defining the colour white with RGB
font1 = pygame.font.SysFont("Contrail One", 80)                                                                        # Defining font and size for heading
font = pygame.font.SysFont("Contrail One", 50)                                                                         # Defining font and size for sub heading
welcome = font1.render("Welcome", True, white)                                                                         # Defining what text says, crisp edges, and the colour
london = font.render("London", True, white)
degree = font.render(weathernumb, True, white)                                                                         # Gets the degree number off web scraping
# TEXT
# IMAGES
background = pygame.image.load("D:\OneDrive\Documents\SCHOOL\Computing Coursework\Screen\pyvidplayer-main\space.jpg")  # Imports the background
background = pygame.transform.scale(background, (WIDTH,HEIGHT))                                                        # Changes background to fit screen size
button = pygame.image.load("D:\OneDrive\Documents\SCHOOL\Computing Coursework\Screen\pyvidplayer-main\Button2.png")
button = pygame.transform.scale(button, (400,150))
button = Button(button, 400,300, "Log in")
outline = pygame.image.load("D:\OneDrive\Documents\SCHOOL\Computing Coursework\Screen\pyvidplayer-main\Outline5.png")  # Imports the outline
outline = pygame.transform.scale(outline, (WIDTH, HEIGHT))                                                             # Changes outline to fit the screen
# IMAGES
## DEFINITIONS


def menublit():                            # Function to put images/text on the screen
    screen.blit(background,(0,0))          # Blits the background at given coordinates
    screen.blit(outline,(0,0))             # Blits the outline at given coordinates
    screen.blit(welcome,(500,300))         # Blits welcome text at given coordinates
    screen.blit(london,(560,460))          # Blits london text at given coordinates
    
        

        


# MAIN MENU LOOP
def main():
    pygame.display.set_caption("Menu")                # Sets caption of the pygame window
    main = True
    while main:                                    # While loop for main menu
        menublit()                                    # Calls the function to blit onto screen
        screen.blit(degree, (100,100))                # Blits the degree onto screen (Here and not in function as needs to update with every while loop as degree can change)
        
        for event in pygame.event.get():              # Checks all possible events that can occur in pygame
            if event.type == pygame.QUIT:
                main = False                       # Ends while loop if user presses 'X' in top right
            if event.type == pygame.MOUSEBUTTONDOWN:
                button.checkForInput(pygame.mouse.get_pos())

                
        button.update()
        button.changeColour(pygame.mouse.get_pos())


                

        pygame.display.update()                       # At the end of each loop the window gets updated with the code
# MAIN MENU LOOP


main()
